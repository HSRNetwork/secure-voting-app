version: "3.7"

services:
  vote:
    build: ./src/vote
    image: vote-webapp:1.0
    restart: on-failure
    ports:
      - "5000:8080"
    networks:
      - front-tier
      - back-tier
    cap_drop:
      # TODO: Drop all Linux capabilities since this container only need some non critical Linux capabilities
      - ...
    cap_add:
      - CAP_CHOWN
      # TODO: Beside changing the ownership of a process, this app also requires to change the UID and GID of a process. Allow it. 
      # Search here for the regarding Linux capabilities: https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities
      - ...
      - ...

  result:
    build: ./src/result
    image: result-webapp:1.0
    restart: on-failure
    depends_on:
      - "db"
    ports:
      # TODO: Map the host port 5001 to the container's port 8080. https://docs.docker.com/compose/compose-file/#ports
      - "..."
    networks:
      - front-tier
      - back-tier

  worker:
    build: ./src/worker
    image: worker-app:1.0
    restart: on-failure
    depends_on:
      - "redis"
    networks:
      - back-tier

  redis:
    image: redis:5.0.5-alpine
    container_name: redis
    restart: on-failure
    networks:
      - back-tier

  db:
    image: postgres:11.4-alpine
    container_name: db
    restart: on-failure
    volumes:
      # TODO: Mount the host directory "./db-data" to "/var/lib/postgresql/data" inside the container so the DB is persistent. https://docs.docker.com/compose/compose-file/#volumes
      - "..."
    networks:
      - back-tier

networks:
  front-tier:
  back-tier:
    # TODO: Since the back-tier network does not be reachable from the outside and the services inside this backend network does not need to communicate to the internet, configure this network as internal. https://docs.docker.com/compose/compose-file/#internal
    ...: ...